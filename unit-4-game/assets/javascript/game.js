// var titleHead = document.getElementById("titleDiv");
// titleHead.innerHTML = "Crystal Collectors Game";
$("#titleDiv").html("Crystal Collectors Game"); //does the same as above using jQuery!

// var instructBlock = document.getElementById("instructDiv");
// instructBlock.innerHTML = "These are the instructions";
var instructText = [
    "You will be given a random number at the start of the game.",
    "There are four crystals below.  By clicking on a crystal you will add a specific amount of points to your total score.",
    "You win the game by matching your total score to random number, you lost the game if your total score goes above the random number.",
    "The value of each crystal is hidden from you until you click on it.",
    "Each time when the game starts, the game will change the values on each crystal."
];

// This writes the instructions!
var intsructFunc = function() {
    for(var l = 0; l < instructText.length; l++) {
        var inputText = instructText[l];
        $("#instructDiv").append(inputText + " <br><br>");
    }
}
intsructFunc();

// $("#instructDiv").html(intsructFunc()); //Writes instructions to game.. because, Javascript.  :)

$(".targetNumDiv").html(""); //Clears my 'place-holder' text

$(".gemDiv").html("");  //Clears my 'place-holder' text



// Arrays

var targetArray = [];  //  contains the random target numbers (19 through 120) to guess
for (var i = 19; i <= 120; i++) {
    targetArray.push(i);
}
var guessArray = [];  //   contains the random guess numbers assigned to gem images (1 through 12)
for (var j = 1; j <= 12; j++) {
    guessArray.push(j);
}

// Variables

// This also needs to be a function

var targetNumFunc = function () {
    result = Math.floor((Math.random() * targetArray.length) + 19);
    return result;  // <-- this worked, but generated randoms from 1-101 -->   // Target Number that gets displayed in targetNumDiv -- shows user what to guess
}

var targetNum = targetNumFunc();

$(".targetNumDiv").html(targetNum);

// This sort of works.. <19 values show as blank, only shows values over 19.
// if(targetNum < 19) {
//     targetNum = Math.floor(Math.random() * targetArray.length);
// } else {
//     $(".targetNumDiv").html(targetNum);
// }



// Can't figure out why this won't work!!  Trying to only have values over 19 for targetNum
// function randNum() {
//     if((Math.floor(Math.random() * targetArray.length)) < 19) {
//         result = Math.floor(Math.random() * targetArray.length);
//     } else {
//         return result;
//     }
//     }
// targetNum = randNum();

    // if((Math.floor(Math.random() * targetArray.length)) < 19) {
    //     targetNum = Math.floor(Math.random() * targetArray.length);
    // } else {
    //     console.log(targetNum);
    // }


    
var guessNum = 0;  //  the value comes from clicking on one of the gems.  
        $(".scoreDiv").html(guessNum);

var inputNum = "";  // gets increased by guessNum
var gemNum = "";  //  random number generated by guessArray. each value goes to an image.
        gemNum = function() {  //generates random numbers to assign to gems.. WORKS!
            var result = Math.floor(Math.random() * guessArray.length);
            return result;
            console.log(result);
        };

var sourceGem = [ //array for images
    "assets/images/image1.png",
    "assets/images/image2.png",
    "assets/images/image3.png",
    "assets/images/image4.png"
];
var imageGem = "";
var winScore = 0; 
var lossScore = 0;
$(".winLoss").html("Wins: " + winScore + "<br>" + "Losses: " + lossScore + "<br>");

var roundResult = "";



// This 'for' loop creates the images
// Needs to be a function i can call in the button click function
for (var k = 0; k < sourceGem.length; k++) {
    imageGem = $("<img>");
    imageGem.addClass("imageGemBtn");
    imageGem.attr("gem-value", gemNum());
    imageGem.attr("src", sourceGem[k]);
    $(".gemDiv").append(imageGem);
}

// Function for click function
// $(".imageGemBtn").click(function() //took this from Derek's example, which works?  
// Can't get the winScore/lossScore variables to increase.

var reset = function() {
    // Reassign gem values
    for (var k = 0; k < sourceGem.length; k++) {
        imageGem = $("<img>");
        imageGem.attr("gem-value", gemNum());
    }
    
    // Reset user score
    guessNum = 0;
    
    // Reset the target number
    targetNum = targetNumFunc();

    $(".targetNumDiv").html(targetNum);

    $(".scoreDiv").html(guessNum);

    // $(".winLoss").html("Wins: " + winScore + "<br>" + "Losses: " + lossScore + "<br>");

}

$(".imageGemBtn").on("click", function() {
    $(".winLoss").html("Wins: " + winScore + "<br>" + "Losses: " + lossScore + "<br>");
    var gemGuess = ($(this).attr("gem-value"));
    gemGuess = parseInt(gemGuess); //Parses to an "int" (from in-class activity), but is it needed?
    guessNum += gemGuess;
    $(".scoreDiv").html(guessNum);
    if (guessNum === targetNum) {
        winScore++;
        // alert("You Win!");
        $(".winLoss").html("You Win!" + "<br>" + "Wins: " + winScore + "<br>" + "Losses: " + lossScore + "<br>");
    
        console.log(winScore);
        reset();
    }else if (guessNum > targetNum) {
        lossScore++;
        // alert("You Loser!!");
        $(".winLoss").html("You Lose!" + "<br>" + "Wins: " + winScore + "<br>" + "Losses: " + lossScore + "<br>");
    
        console.log(lossScore);
        reset();
    }



});



// If condition for Win/Loss



// Console Logs

console.log("lossScore= " + lossScore);
console.log("winScore= " + winScore);
console.log(); //how would I console.log the imageGemBtn (class) values?
console.log(instructText);
console.log(targetNum);
console.log(sourceGem);
console.log(targetArray);
console.log(guessArray);




// Object with functions setting array values (experimental!)
//  Work on this!!

// var gameArrays = {
//     array1: function() {
//         for(var i = 19; i <= 120; i++) {
//             targetArray.push(i);
//         }
//     },

//     array2: function() {
//         for(var j = 1; j <= 12; j++) {
//             guessArray.push(j);
//         }
//     }
// }

